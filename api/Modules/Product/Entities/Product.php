<?php

namespace Modules\Product\Entities;

use Illuminate\Database\Eloquent\Model;
use Modules\FileManager\Entities\File;
use Modules\Tag\Entities\Tag;
use Modules\User\Entities\User;

class Product extends Model
{

    protected $table='product';

    protected $guarded = [];


    protected static function boot()
    {
        parent::boot(); // TODO: Change the autogenerated stub

        static::created(function ($model) {
            \Cache::flush();
        });

        static::updated(function ($model) {
            \Cache::flush();
        });

        static::deleted(function ($model) {
            \Cache::flush();
        });

    }

    // one to one relations

    public function brand()
    {
        return $this->belongsTo(Brand::class);
    }

    public function packageType()
    {
        return $this->belongsTo(PackageType::class, 'package_type_id');
    }

    public function createdBy()
    {
        return $this->belongsTo(User::class, 'created_by');
    }


    public function categories()
    {
        return $this->belongsToMany(Category::class, 'product_has_categories', 'product_id', 'category_id');
    }


    public function tags()
    {
        return $this->belongsToMany(Tag::class, 'product_has_tags', 'product_id', 'tag_id');
    }


    public function filters()
    {
        return $this->belongsToMany(Filter::class, 'product_has_filters', 'product_id', 'filter_id');
    }


    public function attributes()
    {
        return $this->belongsToMany(Attribute::class, 'product_has_attributes', 'product_id', 'attribute_id');
    }


    public function priceParameters()
    {
        return $this->belongsToMany(PriceParameter::class, 'product_has_price_parameters', 'product_id', 'price_parameter_id');
    }


    public function pins()
    {
        return $this->hasMany(Pins::class);
    }


    // one to many relations
    public function files()
    {
        return $this->morphMany(File::class, 'fileable');
    }


}
